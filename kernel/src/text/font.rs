use core::ascii::Char;

use bitvec::array::BitArray;

/// Font trait
pub trait Font<const W: usize, const H: usize> {
    /// Width in pixels
    fn width() -> usize { W }
    /// Height in pixels
    fn height() -> usize { H }
    /// Get bitmap for character, fg = 1, bg = 0
    fn get_char(c: Char) -> BitArray<[u8; (W * H + 7) / 8]>;
}

/// Linux 8x8 font.
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct Basic8x8;

/// Linux 8x8 font.
impl Font<8, 8> for Basic8x8 {
    fn get_char(c: Char) -> BitArray<[u8; 8]> {
        match c {
            Char::Null => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::StartOfHeading => [0x7e, 0x81, 0xa5, 0x81, 0xbd, 0x99, 0x81, 0x7e].into(),
            Char::StartOfText => [0x7e, 0xff, 0xdb, 0xff, 0xc3, 0xe7, 0xff, 0x7e].into(),
            Char::EndOfText => [0x6c, 0xfe, 0xfe, 0xfe, 0x7c, 0x38, 0x10, 0x00].into(),
            Char::EndOfTransmission => [0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10, 0x00].into(),
            Char::Enquiry => [0x38, 0x7c, 0x38, 0xfe, 0xfe, 0xd6, 0x10, 0x38].into(),
            Char::Acknowledge => [0x10, 0x38, 0x7c, 0xfe, 0xfe, 0x7c, 0x10, 0x38].into(),
            Char::Bell => [0x00, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00, 0x00].into(),
            Char::Backspace => [0xff, 0xff, 0xe7, 0xc3, 0xc3, 0xe7, 0xff, 0xff].into(),
            Char::CharacterTabulation => [0x00, 0x3c, 0x66, 0x42, 0x42, 0x66, 0x3c, 0x00].into(),
            Char::LineFeed => [0xff, 0xc3, 0x99, 0xbd, 0xbd, 0x99, 0xc3, 0xff].into(),
            Char::LineTabulation => [0x0f, 0x07, 0x0f, 0x7d, 0xcc, 0xcc, 0xcc, 0x78].into(),
            Char::FormFeed => [0x3c, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18].into(),
            Char::CarriageReturn => [0x3f, 0x33, 0x3f, 0x30, 0x30, 0x70, 0xf0, 0xe0].into(),
            Char::ShiftOut => [0x7f, 0x63, 0x7f, 0x63, 0x63, 0x67, 0xe6, 0xc0].into(),
            Char::ShiftIn => [0x18, 0xdb, 0x3c, 0xe7, 0xe7, 0x3c, 0xdb, 0x18].into(),
            Char::DataLinkEscape => [0x80, 0xe0, 0xf8, 0xfe, 0xf8, 0xe0, 0x80, 0x00].into(),
            Char::DeviceControlOne => [0x02, 0x0e, 0x3e, 0xfe, 0x3e, 0x0e, 0x02, 0x00].into(),
            Char::DeviceControlTwo => [0x18, 0x3c, 0x7e, 0x18, 0x18, 0x7e, 0x3c, 0x18].into(),
            Char::DeviceControlThree => [0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00].into(),
            Char::DeviceControlFour => [0x7f, 0xdb, 0xdb, 0x7b, 0x1b, 0x1b, 0x1b, 0x00].into(),
            Char::NegativeAcknowledge => [0x3e, 0x61, 0x3c, 0x66, 0x66, 0x3c, 0x86, 0x7c].into(),
            Char::SynchronousIdle => [0x00, 0x00, 0x00, 0x00, 0x7e, 0x7e, 0x7e, 0x00].into(),
            Char::EndOfTransmissionBlock => [0x18, 0x3c, 0x7e, 0x18, 0x7e, 0x3c, 0x18, 0xff].into(),
            Char::Cancel => [0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x00].into(),
            Char::EndOfMedium => [0x18, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00].into(),
            Char::Substitute => [0x00, 0x18, 0x0c, 0xfe, 0x0c, 0x18, 0x00, 0x00].into(),
            Char::Escape => [0x00, 0x30, 0x60, 0xfe, 0x60, 0x30, 0x00, 0x00].into(),
            Char::InformationSeparatorFour => [0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xfe, 0x00, 0x00].into(),
            Char::InformationSeparatorThree => [0x00, 0x24, 0x66, 0xff, 0x66, 0x24, 0x00, 0x00].into(),
            Char::InformationSeparatorTwo => [0x00, 0x18, 0x3c, 0x7e, 0xff, 0xff, 0x00, 0x00].into(),
            Char::InformationSeparatorOne => [0x00, 0xff, 0xff, 0x7e, 0x3c, 0x18, 0x00, 0x00].into(),
            Char::Space => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::ExclamationMark => [0x18, 0x3c, 0x3c, 0x18, 0x18, 0x00, 0x18, 0x00].into(),
            Char::QuotationMark => [0x66, 0x66, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::NumberSign => [0x6c, 0x6c, 0xfe, 0x6c, 0xfe, 0x6c, 0x6c, 0x00].into(),
            Char::DollarSign => [0x18, 0x3e, 0x60, 0x3c, 0x06, 0x7c, 0x18, 0x00].into(),
            Char::PercentSign => [0x00, 0xc6, 0xcc, 0x18, 0x30, 0x66, 0xc6, 0x00].into(),
            Char::Ampersand => [0x38, 0x6c, 0x38, 0x76, 0xdc, 0xcc, 0x76, 0x00].into(),
            Char::Apostrophe => [0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::LeftParenthesis => [0x0c, 0x18, 0x30, 0x30, 0x30, 0x18, 0x0c, 0x00].into(),
            Char::RightParenthesis => [0x30, 0x18, 0x0c, 0x0c, 0x0c, 0x18, 0x30, 0x00].into(),
            Char::Asterisk => [0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00].into(),
            Char::PlusSign => [0x00, 0x18, 0x18, 0x7e, 0x18, 0x18, 0x00, 0x00].into(),
            Char::Comma => [0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30].into(),
            Char::HyphenMinus => [0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00].into(),
            Char::FullStop => [0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00].into(),
            Char::Solidus => [0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00].into(),
            Char::Digit0 => [0x38, 0x6c, 0xc6, 0xd6, 0xc6, 0x6c, 0x38, 0x00].into(),
            Char::Digit1 => [0x18, 0x38, 0x18, 0x18, 0x18, 0x18, 0x7e, 0x00].into(),
            Char::Digit2 => [0x7c, 0xc6, 0x06, 0x1c, 0x30, 0x66, 0xfe, 0x00].into(),
            Char::Digit3 => [0x7c, 0xc6, 0x06, 0x3c, 0x06, 0xc6, 0x7c, 0x00].into(),
            Char::Digit4 => [0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x1e, 0x00].into(),
            Char::Digit5 => [0xfe, 0xc0, 0xc0, 0xfc, 0x06, 0xc6, 0x7c, 0x00].into(),
            Char::Digit6 => [0x38, 0x60, 0xc0, 0xfc, 0xc6, 0xc6, 0x7c, 0x00].into(),
            Char::Digit7 => [0xfe, 0xc6, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x00].into(),
            Char::Digit8 => [0x7c, 0xc6, 0xc6, 0x7c, 0xc6, 0xc6, 0x7c, 0x00].into(),
            Char::Digit9 => [0x7c, 0xc6, 0xc6, 0x7e, 0x06, 0x0c, 0x78, 0x00].into(),
            Char::Colon => [0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00].into(),
            Char::Semicolon => [0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x30].into(),
            Char::LessThanSign => [0x06, 0x0c, 0x18, 0x30, 0x18, 0x0c, 0x06, 0x00].into(),
            Char::EqualsSign => [0x00, 0x00, 0x7e, 0x00, 0x00, 0x7e, 0x00, 0x00].into(),
            Char::GreaterThanSign => [0x60, 0x30, 0x18, 0x0c, 0x18, 0x30, 0x60, 0x00].into(),
            Char::QuestionMark => [0x7c, 0xc6, 0x0c, 0x18, 0x18, 0x00, 0x18, 0x00].into(),
            Char::CommercialAt => [0x7c, 0xc6, 0xde, 0xde, 0xde, 0xc0, 0x78, 0x00].into(),
            Char::CapitalA => [0x38, 0x6c, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00].into(),
            Char::CapitalB => [0xfc, 0x66, 0x66, 0x7c, 0x66, 0x66, 0xfc, 0x00].into(),
            Char::CapitalC => [0x3c, 0x66, 0xc0, 0xc0, 0xc0, 0x66, 0x3c, 0x00].into(),
            Char::CapitalD => [0xf8, 0x6c, 0x66, 0x66, 0x66, 0x6c, 0xf8, 0x00].into(),
            Char::CapitalE => [0xfe, 0x62, 0x68, 0x78, 0x68, 0x62, 0xfe, 0x00].into(),
            Char::CapitalF => [0xfe, 0x62, 0x68, 0x78, 0x68, 0x60, 0xf0, 0x00].into(),
            Char::CapitalG => [0x3c, 0x66, 0xc0, 0xc0, 0xce, 0x66, 0x3a, 0x00].into(),
            Char::CapitalH => [0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00].into(),
            Char::CapitalI => [0x3c, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00].into(),
            Char::CapitalJ => [0x1e, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78, 0x00].into(),
            Char::CapitalK => [0xe6, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0xe6, 0x00].into(),
            Char::CapitalL => [0xf0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xfe, 0x00].into(),
            Char::CapitalM => [0xc6, 0xee, 0xfe, 0xfe, 0xd6, 0xc6, 0xc6, 0x00].into(),
            Char::CapitalN => [0xc6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0xc6, 0x00].into(),
            Char::CapitalO => [0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00].into(),
            Char::CapitalP => [0xfc, 0x66, 0x66, 0x7c, 0x60, 0x60, 0xf0, 0x00].into(),
            Char::CapitalQ => [0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xce, 0x7c, 0x0e].into(),
            Char::CapitalR => [0xfc, 0x66, 0x66, 0x7c, 0x6c, 0x66, 0xe6, 0x00].into(),
            Char::CapitalS => [0x3c, 0x66, 0x30, 0x18, 0x0c, 0x66, 0x3c, 0x00].into(),
            Char::CapitalT => [0x7e, 0x7e, 0x5a, 0x18, 0x18, 0x18, 0x3c, 0x00].into(),
            Char::CapitalU => [0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00].into(),
            Char::CapitalV => [0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00].into(),
            Char::CapitalW => [0xc6, 0xc6, 0xc6, 0xd6, 0xd6, 0xfe, 0x6c, 0x00].into(),
            Char::CapitalX => [0xc6, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0xc6, 0x00].into(),
            Char::CapitalY => [0x66, 0x66, 0x66, 0x3c, 0x18, 0x18, 0x3c, 0x00].into(),
            Char::CapitalZ => [0xfe, 0xc6, 0x8c, 0x18, 0x32, 0x66, 0xfe, 0x00].into(),
            Char::LeftSquareBracket => [0x3c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3c, 0x00].into(),
            Char::ReverseSolidus => [0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x02, 0x00].into(),
            Char::RightSquareBracket => [0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x3c, 0x00].into(),
            Char::CircumflexAccent => [0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00].into(),
            Char::LowLine => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff].into(),
            Char::GraveAccent => [0x30, 0x18, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallA => [0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00].into(),
            Char::SmallB => [0xe0, 0x60, 0x7c, 0x66, 0x66, 0x66, 0xdc, 0x00].into(),
            Char::SmallC => [0x00, 0x00, 0x7c, 0xc6, 0xc0, 0xc6, 0x7c, 0x00].into(),
            Char::SmallD => [0x1c, 0x0c, 0x7c, 0xcc, 0xcc, 0xcc, 0x76, 0x00].into(),
            Char::SmallE => [0x00, 0x00, 0x7c, 0xc6, 0xfe, 0xc0, 0x7c, 0x00].into(),
            Char::SmallF => [0x3c, 0x66, 0x60, 0xf8, 0x60, 0x60, 0xf0, 0x00].into(),
            Char::SmallG => [0x00, 0x00, 0x76, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8].into(),
            Char::SmallH => [0xe0, 0x60, 0x6c, 0x76, 0x66, 0x66, 0xe6, 0x00].into(),
            Char::SmallI => [0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3c, 0x00].into(),
            Char::SmallJ => [0x06, 0x00, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3c].into(),
            Char::SmallK => [0xe0, 0x60, 0x66, 0x6c, 0x78, 0x6c, 0xe6, 0x00].into(),
            Char::SmallL => [0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3c, 0x00].into(),
            Char::SmallM => [0x00, 0x00, 0xec, 0xfe, 0xd6, 0xd6, 0xd6, 0x00].into(),
            Char::SmallN => [0x00, 0x00, 0xdc, 0x66, 0x66, 0x66, 0x66, 0x00].into(),
            Char::SmallO => [0x00, 0x00, 0x7c, 0xc6, 0xc6, 0xc6, 0x7c, 0x00].into(),
            Char::SmallP => [0x00, 0x00, 0xdc, 0x66, 0x66, 0x7c, 0x60, 0xf0].into(),
            Char::SmallQ => [0x00, 0x00, 0x76, 0xcc, 0xcc, 0x7c, 0x0c, 0x1e].into(),
            Char::SmallR => [0x00, 0x00, 0xdc, 0x76, 0x60, 0x60, 0xf0, 0x00].into(),
            Char::SmallS => [0x00, 0x00, 0x7e, 0xc0, 0x7c, 0x06, 0xfc, 0x00].into(),
            Char::SmallT => [0x30, 0x30, 0xfc, 0x30, 0x30, 0x36, 0x1c, 0x00].into(),
            Char::SmallU => [0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0x76, 0x00].into(),
            Char::SmallV => [0x00, 0x00, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00].into(),
            Char::SmallW => [0x00, 0x00, 0xc6, 0xd6, 0xd6, 0xfe, 0x6c, 0x00].into(),
            Char::SmallX => [0x00, 0x00, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x00].into(),
            Char::SmallY => [0x00, 0x00, 0xc6, 0xc6, 0xc6, 0x7e, 0x06, 0xfc].into(),
            Char::SmallZ => [0x00, 0x00, 0x7e, 0x4c, 0x18, 0x32, 0x7e, 0x00].into(),
            Char::LeftCurlyBracket => [0x0e, 0x18, 0x18, 0x70, 0x18, 0x18, 0x0e, 0x00].into(),
            Char::VerticalLine => [0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00].into(),
            Char::RightCurlyBracket => [0x70, 0x18, 0x18, 0x0e, 0x18, 0x18, 0x70, 0x00].into(),
            Char::Tilde => [0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Delete => [0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0x00].into(),
        }
    }
}

/// Linux ter 16x32 font.
#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]
pub struct Ter16x32;

/// Linux ter 16x32 font.
impl Font<16, 32> for Ter16x32 {
    fn get_char(c: Char) -> BitArray<[u8; 64]> {
        match c {
            Char::Null => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc, 0x7f, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0xfc,	0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::StartOfHeading => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf8, 0x3f, 0xfc, 0x7f, 0x1e,	0xf0, 0x0e, 0xe0, 0x0e, 0xe0, 0x0e, 0xe0, 0xee,	0xee, 0xee, 0xee, 0x0e, 0xe0, 0x0e, 0xe0, 0x0e,	0xe0, 0x0e, 0xe0, 0xee, 0xef, 0xce, 0xe7, 0x0e,	0xe0, 0x0e, 0xe0, 0x0e, 0xe0, 0x1e, 0xf0, 0xfc,	0x7f, 0xf8, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::StartOfText => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf8, 0x3f, 0xfc, 0x7f, 0xfe,	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0x8e,	0xe3, 0x8e, 0xe3, 0xfe, 0xff, 0xfe, 0xff, 0xfe,	0xff, 0xfe, 0xff, 0x0e, 0xe0, 0x1e, 0xf0, 0x3e,	0xf8, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfc,	0x7f, 0xf8, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::EndOfText => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c,	0x78, 0x7e, 0xfc, 0xfe, 0xfe, 0xfe, 0xff, 0xfe,	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfc,	0x7f, 0xfc, 0x7f, 0xf8, 0x3f, 0xf0, 0x1f, 0xe0,	0x0f, 0xc0, 0x07, 0x80, 0x03, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::EndOfTransmission => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x80, 0x03, 0xc0, 0x07, 0xe0, 0x0f, 0xf0,	0x1f, 0xf8, 0x3f, 0xfc, 0x7f, 0xfe, 0xff, 0xfe,	0xff, 0xfc, 0x7f, 0xf8, 0x3f, 0xf0, 0x1f, 0xe0,	0x0f, 0xc0, 0x07, 0x80, 0x03, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Enquiry => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xc0, 0x07, 0xe0, 0x0f, 0xe0,	0x0f, 0xe0, 0x0f, 0xe0, 0x0f, 0xe0, 0x0f, 0xc0,	0x07, 0x80, 0x03, 0xb8, 0x3b, 0xfc, 0x7f, 0xfe,	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfc,	0x7f, 0xb8, 0x3b, 0x80, 0x03, 0x80, 0x03, 0xe0,	0x0f, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Acknowledge => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0xc0,	0x07, 0xe0, 0x0f, 0xf0, 0x1f, 0xf8, 0x3f, 0xfc,	0x7f, 0xfc, 0x7f, 0xfe, 0xff, 0xfe, 0xff, 0xfe,	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xbc, 0x7b, 0xb8,	0x3b, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0xe0,	0x0f, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Bell => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,	0x03, 0xe0, 0x07, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0,	0x0f, 0xf0, 0x0f, 0xe0, 0x07, 0xc0, 0x03, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Backspace => [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f,	0xfc, 0x1f, 0xf8, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f,	0xf0, 0x0f, 0xf0, 0x1f, 0xf8, 0x3f, 0xfc, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff].into(),
            Char::CharacterTabulation => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,	0x03, 0xe0, 0x07, 0x70, 0x0e, 0x30, 0x0c, 0x30,	0x0c, 0x70, 0x0e, 0xe0, 0x07, 0xc0, 0x03, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::LineFeed => [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f,	0xfc, 0x1f, 0xf8, 0x8f, 0xf1, 0xcf, 0xf3, 0xcf,	0xf3, 0x8f, 0xf1, 0x1f, 0xf8, 0x3f, 0xfc, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff].into(),
            Char::LineTabulation => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfe, 0x03, 0xfe, 0x03, 0x1e,	0x00, 0x3e, 0x00, 0x76, 0x00, 0xe6, 0x00, 0xc6,	0x01, 0x86, 0x03, 0xe0, 0x3f, 0xf0, 0x7f, 0x78,	0xf0, 0x38, 0xe0, 0x38, 0xe0, 0x38, 0xe0, 0x38,	0xe0, 0x38, 0xe0, 0x38, 0xe0, 0x78, 0xf0, 0xf0,	0x7f, 0xe0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::FormFeed => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8, 0x3f, 0xf0,	0x1f, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0xfc,	0x7f, 0xfc, 0x7f, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CarriageReturn => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfc, 0x3f, 0xfc, 0x3f, 0x1c,	0x38, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38, 0xfc,	0x3f, 0xfc, 0x3f, 0x00, 0x38, 0x00, 0x38, 0x00,	0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00,	0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00,	0xf8, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::ShiftOut => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfe, 0x7f, 0xfe, 0x7f, 0x0e,	0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0xfe,	0x7f, 0xfe, 0x7f, 0x0e, 0x70, 0x0e, 0x70, 0x0e,	0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e,	0x70, 0x0e, 0x70, 0x0e, 0x70, 0x3e, 0x70, 0x3c,	0xf0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::ShiftIn => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x9c, 0x73, 0x9c, 0x73, 0xb8,	0x3b, 0xf0, 0x1f, 0xe0, 0x0f, 0x7c, 0x7c, 0x7c,	0x7c, 0xe0, 0x0f, 0xf0, 0x1f, 0xb8, 0x3b, 0x9c,	0x73, 0x9c, 0x73, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::DataLinkEscape => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0xc0, 0x00, 0xf0, 0x00, 0xfc, 0x00, 0xff, 0xc0,	0xff, 0xf0, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff,	0xff, 0xfc, 0xff, 0xf0, 0xff, 0xc0, 0xff, 0x00,	0xff, 0x00, 0xfc, 0x00, 0xf0, 0x00, 0xc0, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::DeviceControlOne => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,	0x00, 0x0f, 0x00, 0x3f, 0x00, 0xff, 0x00, 0xff,	0x03, 0xff, 0x0f, 0xff, 0x3f, 0xff, 0xff, 0xff,	0xff, 0xff, 0x3f, 0xff, 0x0f, 0xff, 0x03, 0xff,	0x00, 0x3f, 0x00, 0x0f, 0x00, 0x03, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::DeviceControlTwo => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0xc0, 0x07, 0xe0,	0x0f, 0xf0, 0x1f, 0xb8, 0x3b, 0x9c, 0x73, 0x8c,	0x63, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x8c, 0x63, 0x9c,	0x73, 0xb8, 0x3b, 0xf0, 0x1f, 0xe0, 0x0f, 0xc0,	0x07, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::DeviceControlThree => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x70, 0x1c, 0x70, 0x1c, 0x70,	0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70,	0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70,	0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x70, 0x1c, 0x70, 0x1c, 0x70,	0x1c, 0x70, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::DeviceControlFour => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfe, 0x1f, 0xfe, 0x3f, 0xce,	0x79, 0xce, 0x71, 0xce, 0x71, 0xce, 0x71, 0xce,	0x71, 0xce, 0x71, 0xce, 0x79, 0xce, 0x3f, 0xce,	0x1f, 0xce, 0x01, 0xce, 0x01, 0xce, 0x01, 0xce,	0x01, 0xce, 0x01, 0xce, 0x01, 0xce, 0x01, 0xce,	0x01, 0xce, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::NegativeAcknowledge => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,	0x07, 0xf0, 0x0f, 0x78, 0x1e, 0x38, 0x1c, 0x00,	0x1c, 0x00, 0x1e, 0xc0, 0x0f, 0xe0, 0x0f, 0xf0,	0x1c, 0x78, 0x1c, 0x38, 0x1c, 0x38, 0x1c, 0x38,	0x1c, 0x38, 0x1e, 0x38, 0x0f, 0xf0, 0x07, 0xf0,	0x03, 0x78, 0x00, 0x38, 0x00, 0x38, 0x1c, 0x78,	0x1e, 0xf0, 0x0f, 0xe0, 0x07, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SynchronousIdle => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe,	0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe,	0x7f, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::EndOfTransmissionBlock => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0xc0, 0x07, 0xe0,	0x0f, 0xf0, 0x1f, 0xb8, 0x3b, 0x9c, 0x73, 0x8c,	0x63, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x8c, 0x63, 0x9c, 0x73, 0xb8, 0x3b, 0xf0,	0x1f, 0xe0, 0x0f, 0xc0, 0x07, 0x80, 0x03, 0xfc,	0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Cancel => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0xc0, 0x07, 0xe0,	0x0f, 0xf0, 0x1f, 0xb8, 0x3b, 0x9c, 0x73, 0x8c,	0x63, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::EndOfMedium => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x8c, 0x63, 0x9c,	0x73, 0xb8, 0x3b, 0xf0, 0x1f, 0xe0, 0x0f, 0xc0,	0x07, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Substitute => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0xc0, 0x00, 0xe0, 0x00, 0x70, 0x00, 0x38,	0x00, 0x1c, 0x00, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe,	0x7f, 0x1c, 0x00, 0x38, 0x00, 0x70, 0x00, 0xe0,	0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Escape => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x03, 0x00, 0x07, 0x00, 0x0e, 0x00,	0x1c, 0x00, 0x38, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe,	0x7f, 0x00, 0x38, 0x00, 0x1c, 0x00, 0x0e, 0x00,	0x07, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::InformationSeparatorFour => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0xfc,	0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::InformationSeparatorThree => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x60, 0x06, 0x70, 0x0e, 0x38, 0x1c, 0x1c,	0x38, 0x0e, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff,	0xff, 0x0e, 0x70, 0x1c, 0x38, 0x38, 0x1c, 0x70,	0x0e, 0x60, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::InformationSeparatorTwo => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,	0x01, 0x80, 0x01, 0xc0, 0x03, 0xc0, 0x03, 0xe0,	0x07, 0xe0, 0x07, 0xf0, 0x0f, 0xf0, 0x0f, 0xf8,	0x1f, 0xf8, 0x1f, 0xfc, 0x3f, 0xfc, 0x3f, 0xfe,	0x7f, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::InformationSeparatorOne => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xfe, 0x7f, 0xfc,	0x3f, 0xfc, 0x3f, 0xf8, 0x1f, 0xf8, 0x1f, 0xf0,	0x0f, 0xf0, 0x0f, 0xe0, 0x07, 0xe0, 0x07, 0xc0,	0x03, 0xc0, 0x03, 0x80, 0x01, 0x80, 0x01, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Space => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::ExclamationMark => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::QuotationMark => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,	0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70,	0x1c, 0x70, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::NumberSign => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x70, 0x1c, 0x70, 0x1c, 0x70,	0x1c, 0x70, 0x1c, 0x70, 0x1c, 0xfc, 0x7f, 0xfc,	0x7f, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70,	0x1c, 0x70, 0x1c, 0x70, 0x1c, 0xfc, 0x7f, 0xfc,	0x7f, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70,	0x1c, 0x70, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::DollarSign => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0xf0, 0x1f, 0xf8,	0x3f, 0xbc, 0x7b, 0x9c, 0x73, 0x80, 0x73, 0x80,	0x73, 0x80, 0x73, 0x80, 0x7b, 0xf0, 0x3f, 0xf8,	0x1f, 0xbc, 0x03, 0x9c, 0x03, 0x9c, 0x03, 0x9c,	0x03, 0x9c, 0x73, 0xbc, 0x7b, 0xf8, 0x3f, 0xf0,	0x1f, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::PercentSign => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x1f, 0x9c, 0x3f, 0xb8,	0x3b, 0xb8, 0x3b, 0xf0, 0x3f, 0x70, 0x1f, 0xe0,	0x00, 0xe0, 0x00, 0xc0, 0x01, 0xc0, 0x01, 0x80,	0x03, 0x80, 0x03, 0x00, 0x07, 0x00, 0x07, 0xf8,	0x0e, 0xfc, 0x0f, 0xdc, 0x1d, 0xdc, 0x1d, 0xfc,	0x39, 0xf8, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Ampersand => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xc0, 0x0f, 0xe0, 0x1f, 0x70,	0x38, 0x70, 0x38, 0x70, 0x38, 0x70, 0x38, 0x70,	0x38, 0xe0, 0x1c, 0xc0, 0x0f, 0x80, 0x0f, 0xce,	0x1f, 0xee, 0x38, 0x7c, 0x70, 0x38, 0x70, 0x38,	0x70, 0x38, 0x70, 0x38, 0x70, 0x7c, 0x78, 0xee,	0x3f, 0xce, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Apostrophe => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::LeftParenthesis => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xe0, 0x00, 0xc0, 0x01, 0x80,	0x03, 0x00, 0x07, 0x00, 0x07, 0x00, 0x0e, 0x00,	0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,	0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,	0x0e, 0x00, 0x07, 0x00, 0x07, 0x80, 0x03, 0xc0,	0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::RightParenthesis => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x07, 0x80,	0x03, 0xc0, 0x01, 0xc0, 0x01, 0xe0, 0x00, 0xe0,	0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0,	0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0, 0x00, 0xe0,	0x00, 0xc0, 0x01, 0xc0, 0x01, 0x80, 0x03, 0x00,	0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Asterisk => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x38, 0x38, 0x70, 0x1c, 0xe0,	0x0e, 0xc0, 0x07, 0x80, 0x03, 0xfc, 0x7f, 0xfc,	0x7f, 0x80, 0x03, 0xc0, 0x07, 0xe0, 0x0e, 0x70,	0x1c, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::PlusSign => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0xfc, 0x7f, 0xfc,	0x7f, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Comma => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x07, 0x00, 0x0e, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::HyphenMinus => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc,	0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::FullStop => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Solidus => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x38,	0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0xe0,	0x00, 0xe0, 0x00, 0xc0, 0x01, 0xc0, 0x01, 0x80,	0x03, 0x80, 0x03, 0x00, 0x07, 0x00, 0x07, 0x00,	0x0e, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x1c, 0x00,	0x38, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit0 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x70, 0x7c,	0x70, 0xfc, 0x70, 0xdc, 0x71, 0x9c, 0x73, 0x1c,	0x77, 0x1c, 0x7e, 0x1c, 0x7c, 0x1c, 0x78, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit1 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x07, 0x80,	0x0f, 0x80, 0x1f, 0x80, 0x1f, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0xf0,	0x1f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit2 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x00, 0x38, 0x00, 0x70, 0x00, 0xe0,	0x00, 0xc0, 0x01, 0x80, 0x03, 0x00, 0x07, 0x00,	0x0e, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x70, 0xfc,	0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit3 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x00, 0x1c,	0x00, 0x1c, 0x00, 0x3c, 0x00, 0xf8, 0x0f, 0xf8,	0x0f, 0x3c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c,	0x00, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit4 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x00, 0x3c, 0x00, 0x7c,	0x00, 0xfc, 0x00, 0xdc, 0x01, 0x9c, 0x03, 0x1c,	0x07, 0x1c, 0x0e, 0x1c, 0x1c, 0x1c, 0x38, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0xfc, 0x7f, 0xfc,	0x7f, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c,	0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit5 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc, 0x7f, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0xf0, 0x7f, 0xf8, 0x7f, 0x3c,	0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c,	0x00, 0x1c, 0x00, 0x1c, 0x70, 0x1c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit6 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf8, 0x1f, 0xf8, 0x3f, 0x00,	0x78, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0xf0, 0x7f, 0xf8, 0x7f, 0x3c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit7 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc, 0x7f, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x38, 0x70, 0x38,	0x00, 0x70, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xe0,	0x00, 0xc0, 0x01, 0xc0, 0x01, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit8 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8, 0x3f, 0xf8,	0x3f, 0x3c, 0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Digit9 => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x78, 0xfc,	0x3f, 0xfc, 0x1f, 0x1c, 0x00, 0x1c, 0x00, 0x1c,	0x00, 0x1c, 0x00, 0x1c, 0x00, 0x3c, 0x00, 0xf8,	0x3f, 0xf0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Colon => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Semicolon => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x07, 0x00, 0x0e, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::LessThanSign => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x70,	0x00, 0xe0, 0x00, 0xc0, 0x01, 0x80, 0x03, 0x00,	0x07, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x38, 0x00,	0x38, 0x00, 0x1c, 0x00, 0x0e, 0x00, 0x07, 0x80,	0x03, 0xc0, 0x01, 0xe0, 0x00, 0x70, 0x00, 0x38,	0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::EqualsSign => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,	0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc, 0x7f, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::GreaterThanSign => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x1c, 0x00,	0x0e, 0x00, 0x07, 0x80, 0x03, 0xc0, 0x01, 0xe0,	0x00, 0x70, 0x00, 0x38, 0x00, 0x1c, 0x00, 0x1c,	0x00, 0x38, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xc0,	0x01, 0x80, 0x03, 0x00, 0x07, 0x00, 0x0e, 0x00,	0x1c, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::QuestionMark => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x38, 0x00, 0x70, 0x00, 0xe0, 0x00, 0xc0,	0x01, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CommercialAt => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf8, 0x1f, 0xfc, 0x3f, 0x0e,	0x78, 0x06, 0x70, 0xfe, 0x71, 0xfe, 0x73, 0x8e,	0x77, 0x0e, 0x77, 0x0e, 0x77, 0x0e, 0x77, 0x0e,	0x77, 0x0e, 0x77, 0x0e, 0x77, 0x9e, 0x77, 0xfe,	0x73, 0xf6, 0x71, 0x00, 0x70, 0x00, 0x78, 0xfe,	0x3f, 0xfe, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalA => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0xfc,	0x7f, 0xfc, 0x7f, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalB => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x7f, 0xf8, 0x7f, 0x3c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x38, 0x70, 0xf0, 0x7f, 0xf0, 0x7f, 0x38,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x70, 0xf8,	0x7f, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalC => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalD => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xc0, 0x7f, 0xf0, 0x7f, 0x78,	0x70, 0x38, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x38, 0x70, 0x78, 0x70, 0xf0,	0x7f, 0xc0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalE => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc, 0x7f, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0xe0, 0x7f, 0xe0,	0x7f, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0xfc,	0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalF => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc, 0x7f, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0xe0, 0x7f, 0xe0,	0x7f, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalG => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0xfc, 0x71, 0xfc,	0x71, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalH => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0xfc, 0x7f, 0xfc,	0x7f, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalI => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xe0, 0x0f, 0xe0, 0x0f, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0xe0,	0x0f, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalJ => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfe, 0x00, 0xfe, 0x00, 0x38,	0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38,	0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38,	0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38,	0x70, 0x38, 0x70, 0x38, 0x70, 0x78, 0x78, 0xf0,	0x3f, 0xe0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalK => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x0c, 0x70, 0x1c, 0x70, 0x38,	0x70, 0x70, 0x70, 0xe0, 0x70, 0xc0, 0x71, 0x80,	0x73, 0x00, 0x77, 0x00, 0x7e, 0x00, 0x7c, 0x00,	0x7c, 0x00, 0x7e, 0x00, 0x77, 0x80, 0x73, 0xc0,	0x71, 0xe0, 0x70, 0x70, 0x70, 0x38, 0x70, 0x1c,	0x70, 0x0c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalL => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0xfc,	0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalM => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x0e, 0x70, 0x0e, 0x70, 0x1e,	0x78, 0x3e, 0x7c, 0x7e, 0x7e, 0x7e, 0x7e, 0xee,	0x77, 0xce, 0x73, 0xce, 0x73, 0x8e, 0x71, 0x0e,	0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e,	0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e,	0x70, 0x0e, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalN => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x78, 0x1c,	0x7c, 0x1c, 0x7e, 0x1c, 0x77, 0x9c, 0x73, 0xdc,	0x71, 0xfc, 0x70, 0x7c, 0x70, 0x3c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalO => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalP => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x7f, 0xf8, 0x7f, 0x3c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x70, 0xf8,	0x7f, 0xf0, 0x7f, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalQ => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x9c, 0x73, 0xfc, 0x79, 0xf8,	0x3f, 0xf0, 0x1f, 0x38, 0x00, 0x1c, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalR => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x7f, 0xf8, 0x7f, 0x3c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x70, 0xf8,	0x7f, 0xf0, 0x7f, 0x00, 0x7e, 0x00, 0x77, 0x80,	0x73, 0xc0, 0x71, 0xe0, 0x70, 0x70, 0x70, 0x38,	0x70, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalS => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x1f, 0xf8, 0x3f, 0x3c,	0x78, 0x1c, 0x70, 0x1c, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x78, 0xf0, 0x3f, 0xf8,	0x1f, 0x3c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c,	0x00, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalT => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc, 0x7f, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalU => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalV => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x38, 0x38, 0x38,	0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x70,	0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0xe0,	0x0e, 0xe0, 0x0e, 0xe0, 0x0e, 0xc0, 0x07, 0xc0,	0x07, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalW => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x0e, 0x70, 0x0e, 0x70, 0x0e,	0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e,	0x70, 0x0e, 0x70, 0x0e, 0x70, 0x0e, 0x70, 0x8e,	0x71, 0xce, 0x73, 0xce, 0x73, 0xee, 0x77, 0x7e,	0x7e, 0x7e, 0x7e, 0x3e, 0x7c, 0x1e, 0x78, 0x0e,	0x70, 0x0e, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalX => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x70, 0x1c, 0x70, 0x38,	0x38, 0x38, 0x38, 0x70, 0x1c, 0x70, 0x1c, 0xe0,	0x0e, 0xe0, 0x0e, 0xc0, 0x07, 0xc0, 0x07, 0xc0,	0x07, 0xc0, 0x07, 0xe0, 0x0e, 0xe0, 0x0e, 0x70,	0x1c, 0x70, 0x1c, 0x38, 0x38, 0x38, 0x38, 0x1c,	0x70, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalY => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x38, 0x38, 0x38, 0x38, 0x70, 0x1c, 0x70,	0x1c, 0xe0, 0x0e, 0xe0, 0x0e, 0xc0, 0x07, 0xc0,	0x07, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CapitalZ => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc, 0x7f, 0x1c,	0x00, 0x1c, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x70,	0x00, 0xe0, 0x00, 0xc0, 0x01, 0x80, 0x03, 0x00,	0x07, 0x00, 0x0e, 0x00, 0x1c, 0x00, 0x38, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0xfc,	0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::LeftSquareBracket => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x0f, 0xf0, 0x0f, 0x00,	0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,	0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,	0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,	0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0xf0,	0x0f, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::ReverseSolidus => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x38, 0x00,	0x1c, 0x00, 0x1c, 0x00, 0x0e, 0x00, 0x0e, 0x00,	0x07, 0x00, 0x07, 0x80, 0x03, 0x80, 0x03, 0xc0,	0x01, 0xc0, 0x01, 0xe0, 0x00, 0xe0, 0x00, 0x70,	0x00, 0x70, 0x00, 0x38, 0x00, 0x38, 0x00, 0x1c,	0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::RightSquareBracket => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x0f, 0xf0, 0x0f, 0x70,	0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70,	0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70,	0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70,	0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0xf0,	0x0f, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::CircumflexAccent => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,	0x03, 0xc0, 0x07, 0xe0, 0x0e, 0x70, 0x1c, 0x38,	0x38, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::LowLine => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x7f, 0xfc,	0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::GraveAccent => [0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x0e, 0x00,	0x07, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallA => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,	0x3f, 0xf8, 0x3f, 0x3c, 0x00, 0x1c, 0x00, 0x1c,	0x00, 0xfc, 0x1f, 0xfc, 0x3f, 0x1c, 0x78, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x78, 0xfc,	0x3f, 0xfc, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallB => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0xf0,	0x7f, 0xf8, 0x7f, 0x3c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x70, 0xf8,	0x7f, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallC => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,	0x1f, 0xf8, 0x3f, 0x3c, 0x78, 0x1c, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallD => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c,	0x00, 0x1c, 0x00, 0x1c, 0x00, 0x1c, 0x00, 0xfc,	0x1f, 0xfc, 0x3f, 0x1c, 0x78, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x78, 0xfc,	0x3f, 0xfc, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallE => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,	0x1f, 0xf8, 0x3f, 0x3c, 0x78, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0xfc, 0x7f, 0xfc, 0x7f, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x1c, 0x78, 0xfc,	0x3f, 0xf8, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallF => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xfe, 0x00, 0xfe, 0x01, 0xc0,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0xf8,	0x3f, 0xf8, 0x3f, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallG => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,	0x1f, 0xfc, 0x3f, 0x1c, 0x78, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x78, 0xfc,	0x3f, 0xfc, 0x1f, 0x1c, 0x00, 0x1c, 0x00, 0x3c,	0x00, 0xf8, 0x3f, 0xf0, 0x3f, 0x00, 0x00].into(),
            Char::SmallH => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0xf0,	0x7f, 0xf8, 0x7f, 0x3c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallI => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80,	0x0f, 0x80, 0x0f, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0xe0,	0x0f, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallJ => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38,	0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8,	0x00, 0xf8, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38,	0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38,	0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38,	0x00, 0x38, 0x00, 0x38, 0x38, 0x38, 0x38, 0x78,	0x3c, 0xf0, 0x1f, 0xe0, 0x0f, 0x00, 0x00].into(),
            Char::SmallK => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x38, 0x00,	0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x1c,	0x38, 0x38, 0x38, 0x70, 0x38, 0xe0, 0x38, 0xc0,	0x39, 0x80, 0x3b, 0x00, 0x3f, 0x00, 0x3f, 0x80,	0x3b, 0xc0, 0x39, 0xe0, 0x38, 0x70, 0x38, 0x38,	0x38, 0x1c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallL => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x0f, 0x80, 0x0f, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0xe0,	0x0f, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallM => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,	0x7f, 0xf8, 0x7f, 0xbc, 0x73, 0x9c, 0x73, 0x9c,	0x73, 0x9c, 0x73, 0x9c, 0x73, 0x9c, 0x73, 0x9c,	0x73, 0x9c, 0x73, 0x9c, 0x73, 0x9c, 0x73, 0x9c,	0x73, 0x9c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallN => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,	0x7f, 0xf8, 0x7f, 0x3c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallO => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,	0x1f, 0xf8, 0x3f, 0x3c, 0x78, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallP => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,	0x7f, 0xf8, 0x7f, 0x3c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x3c, 0x70, 0xf8,	0x7f, 0xf0, 0x7f, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00].into(),
            Char::SmallQ => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,	0x1f, 0xfc, 0x3f, 0x1c, 0x78, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x78, 0xfc,	0x3f, 0xfc, 0x1f, 0x1c, 0x00, 0x1c, 0x00, 0x1c,	0x00, 0x1c, 0x00, 0x1c, 0x00, 0x00, 0x00].into(),
            Char::SmallR => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,	0x73, 0xfc, 0x77, 0x00, 0x7e, 0x00, 0x7c, 0x00,	0x78, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00,	0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallS => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,	0x1f, 0xf8, 0x3f, 0x3c, 0x78, 0x00, 0x70, 0x00,	0x70, 0x00, 0x78, 0xf0, 0x3f, 0xf8, 0x1f, 0x3c,	0x00, 0x1c, 0x00, 0x1c, 0x00, 0x3c, 0x78, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallT => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0x00,	0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0xf0,	0x7f, 0xf0, 0x7f, 0x00, 0x07, 0x00, 0x07, 0x00,	0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00,	0x07, 0x00, 0x07, 0x00, 0x07, 0x80, 0x07, 0xfc,	0x03, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallU => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x78, 0xfc,	0x3f, 0xfc, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallV => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x38, 0x38, 0x38,	0x38, 0x38, 0x38, 0x70, 0x1c, 0x70, 0x1c, 0x70,	0x1c, 0xe0, 0x0e, 0xe0, 0x0e, 0xc0, 0x07, 0xc0,	0x07, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallW => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x9c,	0x73, 0x9c, 0x73, 0x9c, 0x73, 0x9c, 0x73, 0x9c,	0x73, 0x9c, 0x73, 0x9c, 0x73, 0xbc, 0x7b, 0xf8,	0x3f, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallX => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x38, 0x38, 0x70,	0x1c, 0xe0, 0x0e, 0xc0, 0x07, 0xc0, 0x07, 0xe0,	0x0e, 0x70, 0x1c, 0x38, 0x38, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::SmallY => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c,	0x70, 0x1c, 0x70, 0x1c, 0x70, 0x1c, 0x78, 0xfc,	0x3f, 0xfc, 0x1f, 0x1c, 0x00, 0x1c, 0x00, 0x3c,	0x00, 0xf8, 0x3f, 0xf0, 0x3f, 0x00, 0x00].into(),
            Char::SmallZ => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,	0x7f, 0xfc, 0x7f, 0x38, 0x00, 0x70, 0x00, 0xe0,	0x00, 0xc0, 0x01, 0x80, 0x03, 0x00, 0x07, 0x00,	0x0e, 0x00, 0x1c, 0x00, 0x38, 0x00, 0x70, 0xfc,	0x7f, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::LeftCurlyBracket => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0xf0, 0x01, 0xf0, 0x03, 0x80,	0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00,	0x07, 0x00, 0x07, 0x00, 0x07, 0x00, 0x3e, 0x00,	0x3e, 0x00, 0x07, 0x00, 0x07, 0x00, 0x07, 0x00,	0x07, 0x00, 0x07, 0x00, 0x07, 0x80, 0x07, 0xf0,	0x03, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::VerticalLine => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::RightCurlyBracket => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x3f, 0x80,	0x07, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0xf0, 0x01, 0xf0,	0x01, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,	0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00,	0x3f, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Tilde => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c,	0x1e, 0x1c, 0x3f, 0x9c, 0x77, 0xdc, 0x73, 0xf8,	0x71, 0xf0, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
            Char::Delete => [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x80, 0x03, 0xc0, 0x07, 0xe0,	0x0f, 0xf0, 0x1e, 0x78, 0x3c, 0x3c, 0x78, 0x1e,	0xf0, 0x0e, 0xe0, 0x0e, 0xe0, 0x0e, 0xe0, 0x0e,	0xe0, 0x0e, 0xe0, 0x0e, 0xe0, 0x0e, 0xe0, 0xfe,	0xff, 0xfe, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00].into(),
        }
    }
}
